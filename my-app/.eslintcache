[{"C:\\Users\\thanu\\projects\\Portfolio\\my-app\\src\\index.js":"1","C:\\Users\\thanu\\projects\\Portfolio\\my-app\\src\\reportWebVitals.js":"2","C:\\Users\\thanu\\projects\\Portfolio\\my-app\\src\\App.js":"3","C:\\Users\\thanu\\projects\\Portfolio\\my-app\\src\\components\\home.js":"4","C:\\Users\\thanu\\projects\\Portfolio\\my-app\\src\\components\\Home.js":"5","C:\\Users\\thanu\\projects\\Portfolio\\my-app\\src\\components\\Navbar.js":"6","C:\\Users\\thanu\\projects\\Portfolio\\my-app\\src\\components\\Header.js":"7","C:\\Users\\thanu\\projects\\Portfolio\\my-app\\src\\components\\Resume.js":"8","C:\\Users\\thanu\\projects\\Portfolio\\my-app\\src\\components\\Portfolio.js":"9","C:\\Users\\thanu\\projects\\Portfolio\\my-app\\src\\components\\Contacts.js":"10","C:\\Users\\thanu\\projects\\Portfolio\\my-app\\src\\components\\Footer.js":"11"},{"size":517,"mtime":1607879772529,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":606,"mtime":1607959105462,"results":"15","hashOfConfig":"13"},{"size":173,"mtime":1607322851186,"results":"16","hashOfConfig":"13"},{"size":253,"mtime":1607962907363,"results":"17","hashOfConfig":"13"},{"size":3295,"mtime":1608368996433,"results":"18","hashOfConfig":"13"},{"size":3518,"mtime":1607962936250,"results":"19","hashOfConfig":"13"},{"size":4987,"mtime":1608369062956,"results":"20","hashOfConfig":"13"},{"size":6816,"mtime":1608046039349,"results":"21","hashOfConfig":"13"},{"size":2346,"mtime":1607962924508,"results":"22","hashOfConfig":"13"},{"size":1342,"mtime":1608044147263,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"140pbav",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\thanu\\projects\\Portfolio\\my-app\\src\\index.js",[],["49","50"],"C:\\Users\\thanu\\projects\\Portfolio\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\thanu\\projects\\Portfolio\\my-app\\src\\App.js",[],"C:\\Users\\thanu\\projects\\Portfolio\\my-app\\src\\components\\home.js",[],"C:\\Users\\thanu\\projects\\Portfolio\\my-app\\src\\components\\Home.js",[],"C:\\Users\\thanu\\projects\\Portfolio\\my-app\\src\\components\\Navbar.js",["51"],"C:\\Users\\thanu\\projects\\Portfolio\\my-app\\src\\components\\Header.js",["52"],"import React from 'react';\r\nimport Typed from \"react-typed\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nimport {\r\n    Typography,\r\n    Avatar,\r\n    Grid,\r\n    Box\r\n} from \"@material-ui/core\";\r\nimport avatar from \"../images/avatar.jpg\";\r\nimport { Block } from '@material-ui/icons';\r\nimport Particles from \"react-particles-js\";\r\n\r\n//CSS STYLES\r\nconst useStyles = makeStyles(theme=> ({\r\n    avatar: {\r\n        width: theme.spacing(25),\r\n        height: theme.spacing(25),\r\n        margin: theme.spacing(1)\r\n    },\r\n    title: {\r\n        color: \"tomato\",\r\n        textAlign: \"center\"\r\n    },\r\n    subtitle: {\r\n        color: \"tan\",\r\n        marginBottom: \"3rem\",\r\n        textAlign: \"center\"\r\n        \r\n    },\r\n    typedContainer: {\r\n        positin: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        width: \"100vw\",\r\n        textAlign: \"center\",\r\n        zIndex: 1,\r\n        display: \"flex\"\r\n    },\r\n    particlesCanva: {\r\n        position: \"absolute\",\r\n        opacity: \"0.3\"\r\n        \r\n    }\r\n}));\r\n\r\nconst Header = () => {\r\n    const classes = useStyles()\r\n    return(\r\n        <>\r\n        \r\n        <Box classname={classes.typedContainer}>\r\n            <Particles\r\n            canvasClassName = {classes.particlesCanva} \r\n                params={{\r\n                    particles:{\r\n                        number:{\r\n                            value:45,\r\n                            density:{\r\n                                enable: true,\r\n                                value_area: 900\r\n                                }\r\n                            },\r\n                            shape: {\r\n                                type: \"star\",\r\n                                strole:{\r\n                                    width: 3,\r\n                                    color: \"tomato\"\r\n                                }\r\n                            },\r\n                            size: {\r\n                                value: 8,\r\n                                random: true,\r\n                                anim: {\r\n                                    enable: true,\r\n                                    speed: 10,\r\n                                    size_min: 0.1,\r\n                                    sync: true\r\n                                }\r\n                            },\r\n                            opacity:{\r\n                                value:1,\r\n                                random: true,\r\n                                anim: {\r\n                                    enable: true,\r\n                                    speed: 1,\r\n                                    opacity_min: 0.1,\r\n                                    sync: true\r\n                                }\r\n                            }\r\n                        }\r\n                    \r\n                }}\r\n                >\r\n                </Particles>   \r\n        <Grid container justify=\"center\">\r\n        <Avatar className={classes.avatar}  src={avatar} alt=\"Manoj S\"/>\r\n\r\n            </Grid>    \r\n        <Typography className={classes.title} variant=\"h4\">\r\n            <Typed strings= {[\"Manoj S\"]} typeSpeed={40}/>\r\n\r\n\r\n        </Typography>\r\n        <br/>\r\n        <Typography className={classes.subtitle} variant=\"h4\">\r\n            <Typed strings= {[\"Web Development\",\"FullStack\",\"Machine Learning\"]} typeSpeed={40} backSpeed={60} loop/>\r\n\r\n\r\n        </Typography>\r\n\r\n        \r\n        </Box>\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header;","C:\\Users\\thanu\\projects\\Portfolio\\my-app\\src\\components\\Resume.js",["53"],"C:\\Users\\thanu\\projects\\Portfolio\\my-app\\src\\components\\Portfolio.js",["54","55"],"import React from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport project1 from \"../images/avatar.jpg\";\r\nimport project2 from \"../images/bgimg9.jpg\";\r\nimport project5 from \"../images/jsrr_bg.png\";\r\nimport {\r\n    Box,\r\n    Grid,\r\n    Card,\r\n    CardActionArea,\r\n    CardActions,\r\n    CardContent,\r\n    CardMedia,\r\n    Button,\r\n    Typography\r\n} from \"@material-ui/core\"\r\nimport { mergeClasses } from \"@material-ui/styles\";\r\n\r\n//CSS STYLES\r\nconst useStyles = makeStyles({\r\n    mainContainer: {\r\n        background: \"#233\",\r\n        height: \"100%\",\r\n        \r\n    },\r\n    cardContainer: {\r\n        maxWidth: 300,\r\n        margin: \"1rem\",\r\n        margin: \"1rem auto\"\r\n    }\r\n});\r\n\r\n\r\n\r\nconst Portfolio= () => {\r\n    const classes = useStyles()\r\n    return (\r\n    <Box component=\"div\" className={classes.mainConatiner}>\r\n    <Navbar/>\r\n    <Grid container justify=\"center\" alignments=\"center\">\r\n        {/*Project 1 */}\r\n        <Grid item xs={8} sm={6} md={4}>\r\n        <Card  className={classes.cardContainer}>\r\n            <CardActionArea>\r\n                <CardMedia\r\n                component=\"img\"\r\n                alt=\"Project 1\"\r\n                height=\"140\"\r\n                image={project1}\r\n                ></CardMedia>\r\n                <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\">\r\n                        FlowerDex\r\n                    </Typography>\r\n                    <Typography  variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        Pokedex:Pokemon :: Flowedex:Flower <br/>\r\n                        Domain: Machine learning, Web Scraping \r\n                    </Typography>\r\n                </CardContent>\r\n                </CardActionArea>\r\n                <CardActions>\r\n                    <Button size=\"small\" color=\"primary\" onClick={event =>  window.open('https://github.com/jonumhills/FlowerDex', '_blank')} >\r\n                        Github\r\n                    </Button>\r\n                </CardActions>\r\n            \r\n        </Card>\r\n        </Grid>\r\n\r\n        {/*Project 2 */}\r\n        <Grid item xs={8} sm={6} md={4}>\r\n        <Card  className={classes.cardContainer}>\r\n            <CardActionArea>\r\n                <CardMedia\r\n                component=\"img\"\r\n                alt=\"Project 2\"\r\n                height=\"140\"\r\n                image={project2}\r\n                ></CardMedia>\r\n                <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\">\r\n                        HumpyDumpy\r\n                    </Typography>\r\n                    <Typography  variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        lailailailailailaialaialaialaialaialaialaialaoalao\r\n                    </Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n                <CardActions>\r\n                    <Button size=\"small\" color=\"primary\">\r\n                        share\r\n                    </Button>\r\n                    <Button size=\"small\" color=\"primary\">\r\n                        Live Demo\r\n                    </Button>\r\n                </CardActions>\r\n            \r\n        </Card>\r\n        </Grid>\r\n\r\n        {/*Project 3 */}\r\n        <Grid item xs={8} sm={6} md={4}>\r\n        <Card  className={classes.cardContainer}>\r\n            <CardActionArea>\r\n                <CardMedia\r\n                component=\"img\"\r\n                alt=\"Project 3\"\r\n                height=\"140\"\r\n                image={project2}\r\n                ></CardMedia>\r\n                <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\">\r\n                        Twitter Analysis\r\n                    </Typography>\r\n                    <Typography  variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        lailailailailailaialaialaialaialaialaialaialaoalao\r\n                    </Typography>\r\n                </CardContent>\r\n                </CardActionArea>\r\n                <CardActions>\r\n                    <Button size=\"small\" color=\"primary\">\r\n                        share\r\n                    </Button>\r\n                    <Button size=\"small\" color=\"primary\">\r\n                        Live Demo\r\n                    </Button>\r\n                </CardActions>\r\n            \r\n        </Card>\r\n        </Grid>\r\n\r\n        {/*Project 4 */}\r\n        <Grid item xs={8} sm={6} md={4}>\r\n        <Card  className={classes.cardContainer}>\r\n            <CardActionArea>\r\n                <CardMedia\r\n                component=\"img\"\r\n                alt=\"Project 4\"\r\n                height=\"140\"\r\n                image={project2}\r\n                ></CardMedia>\r\n                <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\">\r\n                        Card Details Recognition\r\n                    </Typography>\r\n                    <Typography  variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        Getting useful information (Unique Id, name ...)\r\n                         from adhar and pan card by clicking a pic of it. <br/> \r\n                        Tech: OpenCv, Flask, PyTesseract\r\n                        \r\n                    </Typography>\r\n                </CardContent>\r\n                </CardActionArea>\r\n                <CardActions>\r\n                    <Button size=\"small\" color=\"primary\" onClick={event =>  window.open('https://github.com/jonumhills/OCR_Card_Details', '_blank')}>\r\n                        Github\r\n                    </Button>\r\n                </CardActions>\r\n            \r\n        </Card>\r\n        </Grid>\r\n\r\n        {/*Project 5 */}\r\n        <Grid item xs={8} sm={6} md={4}>\r\n        <Card  className={classes.cardContainer}>\r\n            <CardActionArea>\r\n                <CardMedia\r\n                component=\"img\"\r\n                alt=\"Project 5\"\r\n                height=\"140\"\r\n                image={project5}\r\n                ></CardMedia>\r\n                <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\">\r\n                        JSRR ACADEMY WEBSITE\r\n                    </Typography>\r\n                    <Typography  variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        Dynamic Web Application for Academic institute <br/>\r\n                        Tech: React, Node\r\n                    </Typography>\r\n                </CardContent>\r\n                </CardActionArea>\r\n                <CardActions>\r\n                    \r\n                    <Button size=\"small\" color=\"primary\" onClick={event =>  window.open('https://www.jsrracademy.in/', '_blank')}>\r\n                        Website\r\n                    </Button>\r\n                </CardActions>\r\n            \r\n        </Card>\r\n        </Grid>\r\n        \r\n    </Grid>\r\n    </Box>);\r\n};\r\n\r\nexport default Portfolio;","C:\\Users\\thanu\\projects\\Portfolio\\my-app\\src\\components\\Contacts.js",[],"C:\\Users\\thanu\\projects\\Portfolio\\my-app\\src\\components\\Footer.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":18,"column":5,"nodeType":"62","messageId":"63","endLine":18,"endColumn":18},{"ruleId":"60","severity":1,"message":"64","line":12,"column":10,"nodeType":"62","messageId":"63","endLine":12,"endColumn":15},{"ruleId":"60","severity":1,"message":"65","line":3,"column":26,"nodeType":"62","messageId":"63","endLine":3,"endColumn":33},{"ruleId":"60","severity":1,"message":"66","line":18,"column":10,"nodeType":"62","messageId":"63","endLine":18,"endColumn":22},{"ruleId":"67","severity":1,"message":"68","line":30,"column":9,"nodeType":"69","messageId":"70","endLine":30,"endColumn":15},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'ThemeProvider' is defined but never used.","Identifier","unusedVar","'Block' is defined but never used.","'Divider' is defined but never used.","'mergeClasses' is defined but never used.","no-dupe-keys","Duplicate key 'margin'.","ObjectExpression","unexpected","no-global-assign","no-unsafe-negation"]